{"version":3,"sources":["Sidebar.js","Projection.js","Layout.js","Data.js","App.js","serviceWorker.js","index.js"],"names":["Sidebar","this","props","setSidebarCanvas","side_canvas","_this","_this$props","sidebar_orientation","sidebar_image_size","grem","p","hover_index","mnist_labels","color_array","react_default","a","createElement","style","display","flexDirection","justifyContent","flexGrow","ref","width","height","background","concat","join","color","padding","transition","href","Component","mnist_tile_locations","Object","toConsumableArray","Array","map","n","i","process","mnist_images","src","img","document","Projection","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleResize","camera","aspect","updateProjectionMatrix","renderer","setSize","current_scale","getScaleFromZ","position","z","d3_x","x","d3_y","y","resize_transform","d3","translate","scale","view","mount","d3_zoom","transform","state","init","bind","assertThisInitialized","addPoints","setUpCamera","animate","getZFromScale","rvFOV","THREE","degToRad","fov","Math","tan","camera_z_position","fov_height","d3_transform","k","set","new_size","input","scale1","domain","range","clamp","scale2","zoomScaler","point_group","scene","children","c","length","material","uniforms","size","value","camera_z_start","mnist_embeddings","vFOV","xs","e","min_x","_","max_x","ys","min_y","max_y","data_aspect","max_x_from_center","m","abs","max_y_from_center","far","scaleExtent","on","zoomHandler","initial_scale","initial_transform","_this$props2","ranges","start","sprite_side","end","sprite_number","push","embedding_chunks","slice","label_chunks","loader","textures","l","t","load","flipY","magFilter","echunk","lchunk","vertices","v","embedding","vert","geometry","numVertices","positions","Float32Array","offsets","colors","addAttribute","attributes","copyVector3sArray","index","floor","texture","repeat","vertexShader","fragmentShader","point_cloud","userData","sprite_index","add","hover_container","point","frustumCulled","visible","digit_index","full_index","needsUpdate","offset","array","highlight_container","highlights","remove","apply","mouse_position","_this$props3","sidebar_ctx","mouse_vector","_ref","_ref2","slicedToArray","mouseX","mouseY","mouseToThree","raycaster","setFromCamera","params","Points","threshold","intersects","intersectObjects","intersect","sortIntersectsByDistanceToRay","object","setHoverIndex","highlightPoint","fillRect","drawImage","_this2","domElement","_d3$mouse","node","_d3$mouse2","checkIntersects","_this$props4","setClearColor","appendChild","addBlankHighlightPoints","handleMouse","requestAnimationFrame","render","_this$props5","prevProps","_this$props6","removeChild","_this3","_this$props7","overflow","tb","lr","Layout","ww","wh","sidebar_height","setState","window","innerWidth","innerHeight","sidebar_mount","offsetHeight","canvas","ctx","getContext","imageSmoothingEnabled","addEventListener","removeEventListener","_this$state","sidebar_style","left","top","main_style","font_size","objectSpread","bottom","scaler","general_style","fontSize","lineHeight","src_Sidebar","src_Projection","Data","fetch","then","response","json","src_Layout","App","src_Data","Boolean","location","hostname","match","ReactDOM","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.70afa14f.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nclass Sidebar extends Component {\n  componentDidMount() {\n    this.props.setSidebarCanvas(this.side_canvas)\n  }\n\n  render() {\n    let {\n      sidebar_orientation,\n      sidebar_image_size,\n      grem,\n      p,\n      hover_index,\n      mnist_labels,\n      color_array,\n    } = this.props\n    return (\n      <div\n        style={{\n          display: 'flex',\n          flexDirection: 'column',\n          justifyContent: 'space-between',\n          flexGrow: 1,\n        }}\n      >\n        <div\n          style={{\n            display: 'flex',\n            flexDirection:\n              sidebar_orientation === 'horizontal' ? 'row' : 'column',\n          }}\n        >\n          <canvas\n            ref={side_canvas => {\n              this.side_canvas = side_canvas\n            }}\n            width={sidebar_image_size}\n            height={sidebar_image_size}\n          />\n          <div style={{ flexGrow: 1 }}>\n            <div\n              style={{\n                background: hover_index\n                  ? `rgb(${color_array[mnist_labels[hover_index]].join(',')})`\n                  : 'transparent',\n                color: hover_index ? '#000' : '#fff',\n                padding: p(grem / 4, grem / 2),\n                display: 'flex',\n                justifyContent: 'space-between',\n                transition: 'all 0.1s linear',\n              }}\n            >\n              <div>Label:</div>\n              {hover_index ? <div>{mnist_labels[hover_index]}</div> : null}\n            </div>\n            <div\n              style={{\n                padding: p(grem / 4, grem / 2),\n                display: 'flex',\n                justifyContent: 'space-between',\n              }}\n            >\n              Index:\n              {hover_index ? <div>{hover_index}</div> : null}\n            </div>\n          </div>\n        </div>\n        <div style={{ padding: grem / 2 }}>\n          <div>\n            An interactive UMAP visualization of the MNIST data set.{' '}\n            <a href=\"#\">About</a>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Sidebar\n","import React, { Component } from 'react'\nimport * as THREE from 'three'\nimport * as _ from 'lodash'\nimport * as d3 from 'd3'\n\n// Constants for sprite sheets\nlet sprite_side = 73\nlet sprite_size = sprite_side * sprite_side\nlet sprite_number = 14\nlet sprite_image_size = 28\n// actual sprite size needs to be power of 2\nlet sprite_actual_size = 2048\n\nlet mnist_tile_string = 'mnist_tile_solid_'\nlet mnist_tile_locations = [...Array(sprite_number)].map(\n  (n, i) => `${process.env.PUBLIC_URL}/${mnist_tile_string}${i}.png`\n)\n\nlet mnist_images = mnist_tile_locations.map(src => {\n  let img = document.createElement('img')\n  img.src = src\n  return img\n})\n\nlet zoomScaler = input => {\n  let scale1 = d3\n    .scaleLinear()\n    .domain([10, 5])\n    .range([14, 28])\n    .clamp(true)\n  let scale2 = d3\n    .scaleLinear()\n    .domain([2, 0.1])\n    .range([28, 56])\n  if (input >= 5) {\n    return scale1(input)\n  } else if (input <= 2) {\n    return scale2(input)\n  } else {\n    return 28\n  }\n}\n\nclass Projection extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {}\n    this.init = this.init.bind(this)\n    this.addPoints = this.addPoints.bind(this)\n    this.handleResize = this.handleResize.bind(this)\n    this.setUpCamera = this.setUpCamera.bind(this)\n    this.animate = this.animate.bind(this)\n    this.getScaleFromZ = this.getScaleFromZ.bind(this)\n    this.getZFromScale = this.getZFromScale.bind(this)\n  }\n\n  getZFromScale(scale) {\n    let rvFOV = THREE.Math.degToRad(this.camera.fov)\n    let scale_height = this.props.height / scale\n    let camera_z_position = scale_height / (2 * Math.tan(rvFOV / 2))\n    return camera_z_position\n  }\n\n  getScaleFromZ(camera_z_position) {\n    let rvFOV = THREE.Math.degToRad(this.camera.fov)\n    let half_fov_height = Math.tan(rvFOV / 2) * camera_z_position\n    let fov_height = half_fov_height * 2\n    let scale = this.props.height / fov_height\n    return scale\n  }\n\n  handleResize = (width, height) => {\n    this.camera.aspect = width / height\n    this.camera.updateProjectionMatrix()\n    this.renderer.setSize(width, height)\n    let current_scale = this.getScaleFromZ(this.camera.position.z)\n    let d3_x = -(this.camera.position.x * current_scale) + this.props.width / 2\n    let d3_y = this.camera.position.y * current_scale + this.props.height / 2\n    var resize_transform = d3.zoomIdentity\n      .translate(d3_x, d3_y)\n      .scale(current_scale)\n    let view = d3.select(this.mount)\n    this.d3_zoom.transform(view, resize_transform)\n  }\n\n  zoomHandler() {\n    let d3_transform = d3.event.transform\n\n    let scale = d3_transform.k\n    let x = -(d3_transform.x - this.props.width / 2) / scale\n    let y = (d3_transform.y - this.props.height / 2) / scale\n    let z = this.getZFromScale(scale)\n\n    this.camera.position.set(x, y, z)\n\n    // point size scales at end of zoom\n    let new_size = zoomScaler(z)\n    let point_group = this.scene.children[0].children\n    for (let c = 0; c < point_group.length; c++) {\n      point_group[c].material.uniforms.size.value = new_size\n    }\n  }\n\n  setUpCamera() {\n    let { width, height, mnist_embeddings } = this.props\n\n    let aspect = this.camera.aspect\n    let vFOV = this.camera.fov\n    let rvFOV = THREE.Math.degToRad(vFOV)\n\n    let xs = mnist_embeddings.map(e => e[0])\n    let min_x = _.min(xs)\n    let max_x = _.max(xs)\n    let ys = mnist_embeddings.map(e => e[1])\n    let min_y = _.min(ys)\n    let max_y = _.max(ys)\n    let data_width = max_x - min_x\n    let data_height = max_y - min_y\n    let data_aspect = data_width / data_height\n\n    let max_x_from_center = _.max([min_x, max_x].map(m => Math.abs(m)))\n    let max_y_from_center = _.max([min_y, max_y].map(m => Math.abs(m)))\n\n    let camera_z_start\n    if (data_aspect > aspect) {\n      // console.log(\"width is limiter\");\n      camera_z_start = max_x_from_center / Math.tan(rvFOV / 2) / aspect\n    } else {\n      // console.log(\"height is limiter\");\n      camera_z_start = max_y_from_center / Math.tan(rvFOV / 2)\n    }\n\n    let far = camera_z_start * 1.25\n    this.camera.far = far\n    this.camera.position.z = camera_z_start * 1.1\n\n    // set up zoom\n    this.d3_zoom = d3\n      .zoom()\n      .scaleExtent([this.getScaleFromZ(far - 1), this.getScaleFromZ(0.1)])\n      .on('zoom', this.zoomHandler.bind(this))\n\n    let view = d3.select(this.mount)\n    this.view = view\n    view.call(this.d3_zoom)\n    let initial_scale = this.getScaleFromZ(this.camera.position.z)\n    var initial_transform = d3.zoomIdentity\n      .translate(width / 2, height / 2)\n      .scale(initial_scale)\n    this.d3_zoom.transform(view, initial_transform)\n  }\n\n  addPoints() {\n    let { mnist_embeddings, mnist_labels, color_array } = this.props\n\n    // split embeddings and labels into chunks to match sprites\n    let ranges = []\n    for (let i = 0; i < sprite_number; i++) {\n      let start = i * sprite_size\n      let end = (i + 1) * sprite_size\n      if (i === sprite_number - 1) end = sprite_number * sprite_size\n      ranges.push([start, end])\n    }\n    let embedding_chunks = ranges.map(range =>\n      mnist_embeddings.slice(range[0], range[1])\n    )\n    let label_chunks = ranges.map(range =>\n      mnist_labels.slice(range[0], range[1])\n    )\n\n    // load the textures\n    let loader = new THREE.TextureLoader()\n    this.textures = mnist_tile_locations.map(l => {\n      let t = loader.load(l)\n      t.flipY = false\n      t.magFilter = THREE.NearestFilter\n      // t.minFilter = THREE.LinearMipMapLinearFilter;\n      return t\n    })\n\n    let point_group = new THREE.Group()\n    for (let c = 0; c < sprite_number; c++) {\n      let echunk = embedding_chunks[c]\n      let lchunk = label_chunks[c]\n\n      let vertices = []\n      for (let v = 0; v < echunk.length; v++) {\n        let embedding = echunk[v]\n        let vert = new THREE.Vector3(embedding[0], embedding[1], 0)\n        vertices[v] = vert\n      }\n\n      let geometry = new THREE.BufferGeometry()\n\n      let numVertices = vertices.length\n      let positions = new Float32Array(numVertices * 3)\n      let offsets = new Float32Array(numVertices * 2)\n      let colors = new Float32Array(numVertices * 3)\n      geometry.addAttribute('position', new THREE.BufferAttribute(positions, 3))\n      geometry.addAttribute('offset', new THREE.BufferAttribute(offsets, 2))\n      geometry.addAttribute('color', new THREE.BufferAttribute(colors, 3))\n      geometry.attributes.position.copyVector3sArray(vertices)\n\n      let texture_subsize = 1 / sprite_side\n\n      for (let i = 0, index = 0, l = numVertices; i < l; i++, index += 2) {\n        let x = ((i % sprite_side) * sprite_image_size) / sprite_actual_size\n        let y =\n          (Math.floor(i / sprite_side) * sprite_image_size) / sprite_actual_size\n        offsets[index] = x\n        offsets[index + 1] = y\n      }\n\n      for (let i = 0, index = 0, l = numVertices; i < l; i++, index += 3) {\n        let color = color_array[lchunk[i]]\n        colors[index] = color[0] / 255\n        colors[index + 1] = color[1] / 255\n        colors[index + 2] = color[2] / 255\n      }\n\n      // uniforms\n      let uniforms = {\n        texture: { value: this.textures[c] },\n        repeat: { value: new THREE.Vector2(texture_subsize, texture_subsize) },\n        size: { value: sprite_image_size },\n      }\n\n      let vertex_shader = `\n        attribute vec2 offset;\n        varying vec2 vOffset;\n        attribute vec3 color;\n        varying vec3 vColor;\n        uniform float size;\n        void main() {\n          vOffset = offset;\n          vColor = color;\n          gl_PointSize = size;\n          gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n        }`\n\n      let fragment_shader = `\n        uniform sampler2D texture;\n        uniform vec2 repeat;\n        varying vec2 vOffset;\n        varying vec3 vColor;\n        void main() {\n          vec2 uv = vec2( gl_PointCoord.x, gl_PointCoord.y );\n          vec4 tex = texture2D( texture, uv * repeat + vOffset );\n          if ( tex.r < 0.5 ) discard;\n          gl_FragColor = tex * vec4(vColor, 1.0);\n        }`\n\n      // material\n      let material = new THREE.ShaderMaterial({\n        uniforms: uniforms,\n        vertexShader: vertex_shader,\n        fragmentShader: fragment_shader,\n      })\n\n      // point cloud\n      let point_cloud = new THREE.Points(geometry, material)\n      point_cloud.userData = { sprite_index: c }\n\n      point_group.add(point_cloud)\n    }\n\n    this.scene.add(point_group)\n  }\n\n  addBlankHighlightPoints() {\n    let hover_container = new THREE.Group()\n    this.scene.add(hover_container)\n\n    let vert = new THREE.Vector3(0, 0, 0)\n    let vertices = [vert]\n    let geometry = new THREE.BufferGeometry()\n    let numVertices = vertices.length\n    var positions = new Float32Array(numVertices * 3) // 3 coordinates per point\n    var offsets = new Float32Array(numVertices * 2) // 2 coordinates per point\n    geometry.addAttribute('position', new THREE.BufferAttribute(positions, 3))\n    geometry.addAttribute('offset', new THREE.BufferAttribute(offsets, 2))\n\n    // all the attributes will be filled on hover\n    let texture_subsize = 1 / sprite_side\n\n    // uniforms\n    let uniforms = {\n      texture: { value: this.textures[0] },\n      repeat: { value: new THREE.Vector2(texture_subsize, texture_subsize) },\n      size: { value: 56.0 },\n    }\n\n    let vertex_shader = `\n        attribute vec2 offset;\n        varying vec2 vOffset;\n        uniform float size;\n        void main() {\n          vOffset = offset;\n          gl_PointSize = size;\n          gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n        }`\n\n    let fragment_shader = `\n        uniform sampler2D texture;\n        uniform vec2 repeat;\n        varying vec2 vOffset;\n        void main() {\n          vec2 uv = vec2( gl_PointCoord.x, gl_PointCoord.y );\n          vec4 tex = texture2D( texture, uv * repeat + vOffset );\n          if ( tex.r < 0.5 ) discard;\n          gl_FragColor = tex;\n        }`\n\n    // material\n    var material = new THREE.ShaderMaterial({\n      uniforms: uniforms,\n      vertexShader: vertex_shader,\n      fragmentShader: fragment_shader,\n    })\n\n    let point = new THREE.Points(geometry, material)\n    point.frustumCulled = false\n\n    this.scene.children[1].visible = false\n    this.scene.children[1].add(point)\n  }\n\n  highlightPoint(sprite_index, digit_index, full_index) {\n    let point = this.scene.children[1].children[0]\n\n    let embedding = this.props.mnist_embeddings[full_index]\n\n    let vert = new THREE.Vector3(embedding[0], embedding[1], 0)\n    let vertices = [vert]\n\n    var offsets = new Float32Array(2) // 2 coordinates per point\n\n    let x = ((digit_index % sprite_side) * 28) / 2048\n    let y = (Math.floor(digit_index / sprite_side) * 28) / 2048\n    offsets[0] = x\n    offsets[1] = y\n\n    point.geometry.attributes.position.copyVector3sArray(vertices)\n    point.geometry.attributes.position.needsUpdate = true // required after the first render\n    point.geometry.attributes.offset.array = offsets\n    point.geometry.attributes.offset.needsUpdate = true // required after the first render\n\n    // need to set attributes on geometry and uniforms on material\n    point.material.uniforms.texture.value = this.textures[sprite_index]\n  }\n\n  removeHighlights() {\n    let highlight_container = this.scene.children[1]\n    let highlights = highlight_container.children\n    highlight_container.remove(...highlights)\n  }\n\n  checkIntersects(mouse_position) {\n    let { width, height, sidebar_ctx, sidebar_image_size } = this.props\n\n    function mouseToThree([mouseX, mouseY]) {\n      return new THREE.Vector3(\n        (mouseX / width) * 2 - 1,\n        -(mouseY / height) * 2 + 1,\n        1\n      )\n    }\n\n    function sortIntersectsByDistanceToRay(intersects) {\n      return _.sortBy(intersects, 'distanceToRay')\n    }\n\n    let mouse_vector = mouseToThree(mouse_position)\n    this.raycaster.setFromCamera(mouse_vector, this.camera)\n    this.raycaster.params.Points.threshold = 0.25\n    let intersects = this.raycaster.intersectObjects(\n      this.scene.children[0].children\n    )\n    if (intersects[0]) {\n      let sorted_intersects = sortIntersectsByDistanceToRay(intersects)\n      let intersect = sorted_intersects[0]\n      let sprite_index = intersect.object.userData.sprite_index\n      let digit_index = intersect.index\n      let full_index = sprite_index * sprite_size + digit_index\n      this.props.setHoverIndex(full_index)\n      this.highlightPoint(sprite_index, digit_index, full_index)\n      this.scene.children[1].visible = true\n\n      sidebar_ctx.fillRect(0, 0, sidebar_image_size, sidebar_image_size)\n      sidebar_ctx.drawImage(\n        mnist_images[sprite_index],\n        // source rectangle\n        (digit_index % sprite_side) * sprite_image_size,\n        Math.floor(digit_index / sprite_side) * sprite_image_size,\n        sprite_image_size,\n        sprite_image_size,\n        // destination rectangle\n        0,\n        0,\n        sidebar_image_size,\n        sidebar_image_size\n      )\n    } else {\n      this.props.setHoverIndex(null)\n      this.scene.children[1].visible = false\n      sidebar_ctx.fillRect(0, 0, sidebar_image_size, sidebar_image_size)\n    }\n  }\n\n  handleMouse() {\n    let view = d3.select(this.renderer.domElement)\n\n    this.raycaster = new THREE.Raycaster()\n\n    view.on('mousemove', () => {\n      let [mouseX, mouseY] = d3.mouse(view.node())\n      let mouse_position = [mouseX, mouseY]\n      this.checkIntersects(mouse_position)\n    })\n  }\n\n  init() {\n    let { width, height } = this.props\n\n    this.scene = new THREE.Scene()\n\n    let vFOV = 75\n    let aspect = width / height\n    let near = 0.01\n    let far = 1000\n\n    this.camera = new THREE.PerspectiveCamera(vFOV, aspect, near, far)\n\n    this.renderer = new THREE.WebGLRenderer()\n    this.renderer.setClearColor(0x111111, 1)\n    this.renderer.setSize(width, height)\n    this.mount.appendChild(this.renderer.domElement)\n\n    this.addPoints()\n\n    this.addBlankHighlightPoints()\n\n    this.setUpCamera()\n\n    this.animate()\n\n    this.handleMouse()\n  }\n\n  animate() {\n    requestAnimationFrame(this.animate)\n    this.renderer.render(this.scene, this.camera)\n  }\n\n  componentDidMount() {\n    let { width, height } = this.props\n    this.init()\n  }\n\n  componentDidUpdate(prevProps) {\n    let { width, height } = this.props\n    if (width !== prevProps.width || height !== prevProps.height) {\n      this.handleResize(width, height)\n    }\n  }\n\n  componentWillUnmount() {\n    this.mount.removeChild(this.renderer.domElement)\n  }\n\n  render() {\n    let { width, height } = this.props\n    return (\n      <div\n        style={{ width: width, height: height, overflow: 'hidden' }}\n        ref={mount => {\n          this.mount = mount\n        }}\n      />\n    )\n  }\n}\n\nexport default Projection\n","import React, { Component } from 'react'\nimport Sidebar from './Sidebar'\nimport Projection from './Projection'\nimport * as _ from 'lodash'\n\n// padding constructor\nfunction p(tb, lr) {\n  return `${tb}px ${lr}px`\n}\n\nlet color_array = [\n  [141, 211, 199],\n  [255, 255, 179],\n  [190, 186, 218],\n  [251, 128, 114],\n  [128, 177, 211],\n  [253, 180, 98],\n  [179, 222, 105],\n  [252, 205, 229],\n  [188, 128, 189],\n  [204, 235, 197],\n]\n\nclass Layout extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      ww: null,\n      wh: null,\n      sidebar_height: null,\n      sidebar_ctx: null,\n      hover_index: null,\n    }\n    this.setSize = _.debounce(this.setSize.bind(this), 200)\n    this.setSidebarCanvas = this.setSidebarCanvas.bind(this)\n  }\n\n  setSize() {\n    this.setState({ ww: window.innerWidth, wh: window.innerHeight })\n    let sidebar_height = this.sidebar_mount.offsetHeight\n    this.setState({ sidebar_height: sidebar_height })\n  }\n\n  setSidebarCanvas(canvas) {\n    let ctx = canvas.getContext('2d')\n    ctx.imageSmoothingEnabled = false\n    this.setState({ sidebar_ctx: ctx })\n  }\n\n  setHoverIndex(hover_index) {\n    this.setState({ hover_index: hover_index })\n  }\n\n  componentWillMount() {\n    this.setSize()\n  }\n\n  componentDidMount() {\n    window.addEventListener('resize', this.setSize)\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.setSize)\n  }\n\n  render() {\n    let { mnist_embeddings, mnist_labels } = this.props\n    let { ww, wh, sidebar_height, sidebar_ctx, hover_index } = this.state\n\n    let line_height = 1.5\n\n    let sidebar_style = {\n      position: 'absolute',\n      left: 0,\n      top: 0,\n      height: '100vh',\n      overflow: 'auto',\n      background: '#222',\n      display: 'flex',\n      flexDirection: 'column',\n    }\n    let main_style = {\n      position: 'relative',\n      height: '100vh',\n      background: '#111',\n    }\n\n    let sidebar_image_size, sidebar_orientation\n    let font_size = 16\n    if (ww < 800) {\n      font_size = 14\n      sidebar_style = {\n        ...sidebar_style,\n        flexDirection: 'row',\n        width: '100%',\n        top: 'auto',\n        height: 'auto',\n        bottom: 0,\n      }\n      main_style = { width: ww, height: wh - sidebar_height }\n      sidebar_image_size = font_size * line_height * 3\n      sidebar_orientation = 'horizontal'\n    } else if (ww < 800 + 600) {\n      let scaler = 200 + (300 - 200) * ((ww - 800) / 600)\n      font_size = 14 + 2 * ((ww - 800) / 600)\n      sidebar_style = {\n        ...sidebar_style,\n        width: scaler,\n      }\n      sidebar_image_size = sidebar_style.width\n      main_style = {\n        ...main_style,\n        width: ww - scaler,\n        left: scaler,\n        height: wh,\n      }\n      sidebar_orientation = 'vertical'\n    } else {\n      sidebar_style = {\n        ...sidebar_style,\n        width: 300,\n      }\n      main_style = {\n        ...main_style,\n        width: ww - 300,\n        left: 300,\n        height: wh,\n      }\n      sidebar_image_size = sidebar_style.width\n      sidebar_orientation = 'vertical'\n    }\n\n    let grem = font_size * line_height\n\n    let general_style = {\n      fontSize: font_size,\n      lineHeight: line_height,\n    }\n\n    return ww !== null ? (\n      <div style={general_style}>\n        <div\n          style={sidebar_style}\n          ref={sidebar_mount => {\n            this.sidebar_mount = sidebar_mount\n          }}\n        >\n          <Sidebar\n            sidebar_orientation={sidebar_orientation}\n            sidebar_image_size={sidebar_image_size}\n            grem={grem}\n            p={p}\n            color_array={color_array}\n            setSidebarCanvas={this.setSidebarCanvas}\n            hover_index={hover_index}\n            mnist_labels={mnist_labels}\n          />\n        </div>\n        <div style={main_style}>\n          <Projection\n            width={main_style.width}\n            height={main_style.height}\n            mnist_embeddings={mnist_embeddings}\n            mnist_labels={mnist_labels}\n            color_array={color_array}\n            sidebar_ctx={sidebar_ctx}\n            sidebar_image_size={sidebar_image_size}\n            setHoverIndex={this.setHoverIndex.bind(this)}\n          />\n        </div>\n      </div>\n    ) : (\n      <div>loading layout</div>\n    )\n  }\n}\n\nexport default Layout\n","import React, { Component } from 'react'\nimport Layout from './Layout'\n\nclass Data extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      mnist_embeddings: null,\n      mnist_labels: null,\n    }\n  }\n\n  componentDidMount() {\n    fetch(`${process.env.PUBLIC_URL}/mnist_embeddings.json`)\n      .then(response => response.json())\n      .then(mnist_embeddings =>\n        this.setState({\n          mnist_embeddings: mnist_embeddings,\n        })\n      )\n    fetch(`${process.env.PUBLIC_URL}/mnist_labels.json`)\n      .then(response => response.json())\n      .then(mnist_labels =>\n        this.setState({\n          mnist_labels: mnist_labels,\n        })\n      )\n  }\n\n  render() {\n    return this.state.mnist_embeddings && this.state.mnist_labels ? (\n      <Layout {...this.state} />\n    ) : (\n      'loading data'\n    )\n  }\n}\n\nexport default Data\n","import React, { Component } from 'react'\nimport './App.css'\nimport Data from './Data'\n\nclass App extends Component {\n  render() {\n    return <Data />\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}